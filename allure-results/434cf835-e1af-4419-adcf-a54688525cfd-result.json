{"name": "Поиск по корректному коду клиента: ", "status": "failed", "statusDetails": {"message": "AssertionError: Отсутствуют поля в карточке клиента: {'futureTurnoverKGS'}\nassert not {'futureTurnoverKGS'}", "trace": "self = <100_service_test.TestSuite object at 0x00000132162A5B50>, clientCode = '008.119115'\n\n    @allure.sub_suite(\"Позитивные тест-кейсы\")\n    @pytest.mark.parametrize(\"clientCode\", [\"008.119115\"], ids=[\"008.119115\"])\n    @allure.title(\"Поиск по корректному коду клиента: \")\n    @allure.description(\"Этот тест проверяет успешный запрос по коду клиента\")\n    def test_get_list_account_10_letter_in_clientCode_get_success_response(self,clientCode):\n>       positive_assert_clientCode(clientCode)\n\n100_service_test.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nclientCode = '008.119115'\n\n    def positive_assert_clientCode(clientCode):\n        service_100_body = get_100_body(clientCode)\n        payment_response = esb_request.service_post(service_100_body)\n        # Добавляем запрос как шаг в отчет Allure\n        with allure.step(\"Проверка отправленного запроса\"):\n            allure.attach(\"Request\", str(service_100_body), allure.attachment_type.JSON)\n        # Добавляем ответ сервиса в отчет Allure\n        with allure.step(\"Проверка тела ответа\"):\n            allure.attach(\"Response\", str(payment_response.text), allure.attachment_type.TEXT)\n        # Преобразуем ответ сервиса в объект Python\n        response_data = json.loads(payment_response.text)\n        # Ожидаемые поля в ответе\n        expected_fields = {\n            \"id\", \"version\", \"type\", \"source\", \"responseCode\", \"responseMessage\", \"dateTime\", \"body\"\n        }\n        # Поля для каждого счета клиента\n        account_fields = {\n            \"accountNum\", \"currency\", \"isActive\", \"statDscr\", \"balance\",\n            \"blockedAmount\", \"availAmount\", \"opened\", \"statDscrId\",\n            \"statDscrNord\", \"dateLast\", \"department\", \"closeDate\",\n            \"chaCode\", \"processing\", \"cardFl\", \"blockedStatus\",\n            \"defaultFL\", \"depAccFl\", \"creAccFl\", \"ordId\",\n            \"futureTurnoverKGS\"\n        }\n        # Проверка наличия ожидаемых полей в ответе\n        missing_fields = expected_fields - set(response_data.keys())\n        assert not missing_fields, f\"Отсутствуют поля в ответе: {missing_fields}\"\n        # Проверка наличия всех счетов клиента и их полей\n        assert isinstance(response_data[\"body\"], list)\n        for account in response_data[\"body\"][0].get(\"accounts\", []):\n            missing_account_fields = account_fields - set(account.keys())\n>           assert not missing_account_fields, f\"Отсутствуют поля в карточке клиента: {missing_account_fields}\"\nE           AssertionError: Отсутствуют поля в карточке клиента: {'futureTurnoverKGS'}\nE           assert not {'futureTurnoverKGS'}\n\n100_service_test.py:45: AssertionError"}, "description": "Этот тест проверяет успешный запрос по коду клиента", "steps": [{"name": "Проверка отправленного запроса", "status": "passed", "attachments": [{"name": "{'version': '1.0', 'type': '100', 'id': '2208A15C-CF68-4948-8E0C-94BD82CDD0F8', 'dateTime': '05.10.2023 11:25:52.770434 +06:00', 'source': 'Creatio', 'body': [{'clientCode': '008.119115'}]}", "source": "25473a4a-0bee-4d14-91c1-ec9f26998f0f-attachment.json", "type": "application/json"}], "start": 1716974666878, "stop": 1716974666879}, {"name": "Проверка тела ответа", "status": "passed", "attachments": [{"name": "{\n  \"id\": \"2208A15C-CF68-4948-8E0C-94BD82CDD0F8\",\n  \"version\": \"1.0\",\n  \"type\": \"100\",\n  \"source\": \"Creatio\",\n  \"responseCode\": \"0\",\n  \"responseMessage\": \"Response succesfully recived\",\n  \"dateTime\": \"29.05.2024 15:24:27.125\",\n  \"body\": [\n    {\n      \"accounts\": [\n        {\n          \"accountNum\": \"1250820004787445\",\n          \"currency\": \"KGS\",\n          \"isActive\": 0,\n          \"statDscr\": \"OPENED\",\n          \"balance\": 0.5,\n          \"blockedAmount\": 0,\n          \"availAmount\": 0.5,\n          \"opened\": \"30.06.2021 00:00:00\",\n          \"statDscrId\": \"1102\",\n          \"statDscrNord\": \"2\",\n          \"dateLast\": \"15.04.2024 00:00:00\",\n          \"department\": \"125008\",\n          \"closeDate\": \"\",\n          \"chaCode\": \"20201\",\n          \"processing\": \"COLVIR\",\n          \"cardFl\": 0,\n          \"blockedStatus\": \"NO_BLOCKED\",\n          \"defaultFL\": 0,\n          \"depAccFl\": 0,\n          \"creAccFl\": 0,\n          \"ordId\": null\n        }\n      ]\n    }\n  ]\n}", "source": "d0f44a65-e60a-4aae-a4e6-a254dad0a391-attachment.txt", "type": "text/plain"}], "start": 1716974666879, "stop": 1716974666879}], "parameters": [{"name": "clientCode", "value": "'008.119115'"}], "start": 1716974666587, "stop": 1716974666880, "uuid": "f2ca58d8-8f60-4dfb-99e6-61a0d040d015", "historyId": "6914b98862e274f6375425a064f2fca9", "testCaseId": "a40d4dc216b548edecdc7a1e4cc49ab5", "fullName": "100_service_test.TestSuite#test_get_list_account_10_letter_in_clientCode_get_success_response", "labels": [{"name": "suite", "value": "(100 сервис) Получение списка счетов клиента"}, {"name": "subSuite", "value": "Позитивные тест-кейсы"}, {"name": "host", "value": "PC-411-140322D"}, {"name": "thread", "value": "27168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "100_service_test"}]}