{"name": "поиск по корректному коду клиента: ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'accountNum' in {'CardNumber': '4196XXXXXXXX4795', 'absAccount': '1250820004775119', 'availAmount': 151.34, 'balance': 151.34, ...}", "trace": "self = <101_service_test.TestSuite object at 0x000001BB7E36BA50>, customerId = '008.119115'\n\n    @allure.sub_suite(\"Позитивные тест-кейсы\")\n    @pytest.mark.parametrize(\"customerId\", [\"008.119115\"], ids=[\"008.119115\"])\n    @allure.title(\"поиск по корректному коду клиента: \")\n    @allure.description(\"Этот тест проверяет успешный запрос по коду клиента\")\n    def test_get_list_account_10_letter_in_customerId_get_success_response(self,customerId):\n>       positive_assert_customerId(customerId)\n\n101_service_test.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncustomerId = '008.119115'\n\n    def positive_assert_customerId(customerId):\n        service_101_body = get_101_body(customerId)\n        payment_response = esb_request.service_post(service_101_body)\n        #assert payment_response.status_code == 200\n    \n        # Добавляем запрос как шаг в отчет Allure\n        with allure.step(\"Проверка отправленного запроса\"):\n            allure.attach(\"Request\", str(service_101_body), allure.attachment_type.JSON)\n    \n        #    # Добавляем ответ сервиса в отчет Allure\n    #    allure.attach(\"Response\", str(payment_response.text), allure.attachment_type.TEXT)\n    \n            # Преобразуем ответ сервиса в объект Python\n            response_data = json.loads(payment_response.text)\n    \n            # Проверяем наличие всех полей в ответе\n            assert \"id\" in response_data\n            assert \"version\" in response_data\n            assert \"type\" in response_data\n            assert \"source\" in response_data\n            assert \"responseCode\" in response_data\n            assert \"responseMessage\" in response_data\n            assert \"dateTime\" in response_data\n            assert \"body\" in response_data\n            assert isinstance(response_data[\"body\"], list)\n            assert isinstance(response_data[\"body\"][0], dict)\n            assert \"accounts\" in response_data[\"body\"][0]\n    \n            # Добавляем шаг с проверкой тела ответа\n    #    with allure.step(\"Проверка ответа\"):\n    #        assert \"accounts\" in response_data[\"body\"][0]\n    \n            # Проверяем содержимое каждого счета в списке счетов клиента\n            for account in response_data[\"body\"][0][\"accounts\"]:\n>               assert \"accountNum\" in account\nE               AssertionError: assert 'accountNum' in {'CardNumber': '4196XXXXXXXX4795', 'absAccount': '1250820004775119', 'availAmount': 151.34, 'balance': 151.34, ...}\n\n101_service_test.py:48: AssertionError"}, "description": "Этот тест проверяет успешный запрос по коду клиента", "steps": [{"name": "Проверка отправленного запроса", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'accountNum' in {'CardNumber': '4196XXXXXXXX4795', 'absAccount': '1250820004775119', 'availAmount': 151.34, 'balance': 151.34, ...}\n", "trace": "  File \"C:\\Users\\001057\\PycharmProjects\\service_Testing\\101_service_test.py\", line 48, in positive_assert_customerId\n    assert \"accountNum\" in account\n"}, "attachments": [{"name": "{'version': '1.0', 'type': '101', 'id': '2208A15C-CF68-4948-8E0C-94BD82CDD0F8', 'dateTime': '05.10.2023 11:25:52.770434 +06:00', 'source': 'Creatio', 'body': [{'customerId': '008.119115'}]}", "source": "51c55eb3-c59d-451e-9007-139d3494320f-attachment.json", "type": "application/json"}], "start": 1714120592712, "stop": 1714120592712}], "parameters": [{"name": "customerId", "value": "'008.119115'"}], "start": 1714120589419, "stop": 1714120592713, "uuid": "27926d35-3fdd-4ab0-b8dc-c9b5f671c8c1", "historyId": "4c198f7299094c9c78aa53b74b090716", "testCaseId": "a0e4226f53fb3f12d39cd129a583f672", "fullName": "101_service_test.TestSuite#test_get_list_account_10_letter_in_customerId_get_success_response", "labels": [{"name": "suite", "value": "Получение списка счетов клиента (101 сервис)"}, {"name": "subSuite", "value": "Позитивные тест-кейсы"}, {"name": "host", "value": "PC-411-140322D"}, {"name": "thread", "value": "8220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "101_service_test"}]}